extends layout

block content
  if (!user)
    div(class='row')
     a(href="/login") Login
  else
    div(class='row')
     p You are currently logged in as #{user.displayName}
     a(href="/logout") Logout
    div(class='row',ng-show="coIDs") 
     p An error has occurred in reading the available company configurations. Please contact pmckeown@accountsiq.com
    div(class='row', ng-controller="getConfig")
     form(name="setConfigForm")
      ul(class='list-group')
       li(class='list-group-item', ng-repeat='coID in coIDs')
        {{ coID.coDescription }}
        {{ coID.coID }}
        input(type="radio" name="configureEnv" value="{{coID.coID}}" label="{{coID.coID}}" ng-required="true", ng-model="setConfigForm.coID", required)
      ul(class='list-group')
       li(class='list-group-item', ng-repeat='type in types')
        {{ type.type }} {{ type.feedType }}
        input(type="radio" name="configureType" value="{{ type }}" label="{{type.type}}" ng-required="true", ng-model="setConfigForm.type", required ng-click="setConfig();")
      input(type="file" accept=".csv" name="file"  ng-show="loadFile" ng-model="filename" file-model="setConfigForm.myFile" ng-required="type.feedType = 'csv'")
      // TODO put back in the ng-disabled
      //input(type="button" class='btn btn-primary' value="submit" ng-click="setConfig(setConfigForm.valid); prepareLoadData();" ng-disabled="setConfigForm.$invalid")
      input(type="button" class='btn btn-primary' value="submit" ng-click="setConfig(setConfigForm.valid); prepareLoadData();")
    div(class='row', ng-controller='updateController' ng-show="loadDataReady")
      uib-tabset(justified="true")
        uib-tab(heading="Load Data")
          p The import file will be read from disk. Invoices will be shown that are in the file. You will also be presented with a list of missing customer accounts. You can select to create these using the system default values
           // form  to handle dynamic filters
          form(name="loadFileForm")
            li(class='list-group-item', ng-repeat='filter in loadDataFilters')
              ul 
               label(for="{{ filter.name }}: " ,class='control-label') {{ filter.label }}  
               |<input type="{{ filter.type }}" name="{{ filter.name }}"  ng-model="filter[filter.name]" ng-required="{{ filter.required }}">
            | Status
            | <table class="table table-striped">
            | <thead>
            | <th>Object to Validate - Data Extract</th>
            | <th>Called</th>
            | <th>Complete</th>
            | <th>Success</th>
            | </thead>
            |	<tr ng-repeat="x in objectsToValidate">
            |		<td>{{ x.name }}</td>
            |		<td><span ng-if="x.called" class="glyphicon glyphicon-ok"></span></td>
            |		<td><span ng-if="x.extracted" class="glyphicon glyphicon-ok"></span></td>
            |		<td><span ng-if="x.success" class="glyphicon glyphicon-ok"></span></td>
            |	</tr>
            |</table>
            li(class='list-group-item', ng-repeat='message in status track by $index')
              ul(class='label' ng-class="{'label-info': message.isError != true, 'label-danger': message.isError == true}") {{message.text}} {{ message.isError }}
            .alert.alert-info(ng-class="{danger:newFileWarn}") Processing {{ newFile }} {{ newFileWarn }}- click "Load File" to update data or refresh browser to start again. 
            button(type='button', class='btn btn-primary', ng-click='loadFileForm.$valid && loadData(loadFileForm)') Load File
          .well.clearfix
                .col-md-3
                        p(class='small' ng-show="hasHeader") Customers to be create in AccountsIQ company {{ coID }}. You can use the "Create Account" button to create them but it is highly recommended that you update the customer names and addresses before processing the invoices. The names and addresses, GL Code and Tax Codes (defaulted in - use the "Get Customer Defaults" to see what they are. But the settings will propogate to every created invoice (so get them correct before creating the invoices).
                        |<script type="text/ng-template" id="TransactionLinesPopUp.html">
                        |  <div class="modal-body">
                        |      <table class="a table table-striped borderless">
                        |        <thead><tr><td ng-repeat="col in displayLineValues">{{col.displayName}}</td></tr></thead>
                        |        <tbody>
                        |          <tr ng-repeat-start='line in transaction.lines' ng-class="{danger:line.isCorrect}" ng-show="!transaction.isCorrect.status" ng-if="hasLines">
                        |          <td class="small" ng-repeat="col in displayLineValues">{{line[col.name]}} </td>
                        |          </tr>
                        |          <tr ng-repeat-end><tr ng-repeat-end >
                        |      </tbody></table>
                        |  </div>
                        |  <div class="modal-footer">
                        |      <button class="btn btn-primary" ng-click="ok()">OK</button>
                        |      <button class="btn btn-warning" ng-click="cancel()">Cancel</button>
                        |  </div>
                        |</script>

                        |<script type="text/ng-template" id="AccountIDPopup.html">
                        |    <form name="AccountIDPopUp">
                        |    <div class="modal-header">
                        |        <h3>New account {{ invalidItem.code }}</h3>
                        |    </div>
                        |    <div class="modal-body">
                        |                Account Code: <input type=text class="form-control" placeholder="{{ invalidItem.code }}" ng-model="invalidItem.data.Code">
                        |                Account Name: <input type=text class="form-control" placeholder="{{ invalidItem.data.Name }}" ng-model="invalidItem.data.Name">
                        |                Address 1: <input type=text class="form-control" placeholder="{{ invalidItem.data.Address1 }}" ng-model="invalidItem.data.Address1">
                        |                Address 2: <input type=text class="form-control" placeholder="{{ invalidItem.data.Address2 }}" ng-model="invalidItem.data.Address2">
                        |                City: <input type=text class="form-control" placeholder="{{ invalidItem.data.City }}" ng-model="invalidItem.data.City">
                        |                County: <input type=text class="form-control" placeholder="{{ invalidItem.data.County_State }}" ng-model="invalidItem.data.County_State">
                        |                Post Code: <input type=text class="form-control" placeholder="{{ invalidItem.data.PostCode }}" ng-model="invalidItem.data.PostCode">
                        |                Country: <input type=text class="form-control" placeholder="{{ invalidItem.data.Country }}" ng-model="invalidItem.data.Country">
                        |                CurrencyCode: <input type=text class="form-control" placeholder="{{ invalidItem.data.CurrencyCode }}" ng-model="invalidItem.data.CurrencyCode">
                        |    </div>
                        |    <div class="modal-footer">
                        |        <button class="btn btn-primary" ng-click="getDetails({ 'type':'getCustomer','apiId': invalidItem.code })">Fetch From API</button>
                        |        <button class="btn btn-primary" ng-click="ok()">OK</button>
                        |        <button class="btn btn-warning" ng-click="cancel()">Cancel</button>
                        |    </div>
                        |    </form>
                        |</script>
                        //ul(class='list-group' ng-show="hasHeader")
                        |<table class="table table-striped" ng-show="invalidData">
                        |<tbody>
                        |<tr ng-repeat="invalidItem in invalidData" ng-class="{danger:invalidItem.exists.isCorrect}" class="success"> 
                        |  <td>{{invalidItem.objectType}}</td>
                        |  <td>{{invalidItem.invalidMessage}}</td>
                        |  <td>{{invalidItem.code}}</td>
                        |  <td>{{invalidItem.apiValue}}</td>
                        |  <td><button type='button' ng-show="invalidItem.canCreate" class='btn indent', ng-click='getFromApi({ invalidItem })'> Get From Api {{ invalidItem.code }}</button></td>
                        |  <td><button type='button' ng-show="invalidItem.canCreate" class='btn indent', ng-click='openAccountDetails(invalidItem)'> Configure {{ invalidItem.code }}</button></td>
                        |  <td><button type='button' ng-show="invalidItem.canCreate" class='btn indent', ng-click='createInvalidItem(invalidItem); remove(invalidData, $index)'> Create {{ invalidItem.code }}</button></td>
                        |</tr>
                        |</tbody></table>
                        button(type='button', class='btn btn-primary', ng-click='revalidate(feedTransactions)') Revalidate Data
           .col-md-9
              | {{ type }} to be create in AccountsIQ company {{ coID }}
              //table.table.table-striped(ng-show="controlTotals.sumNetAmount")
              table.table.table-striped
                thead
                  tr
                    th Control Totals (please check against invoice feed)
                  tr
                    td Feed Record Count
                    td {{ controlTotals.transactionFeedCount }}
                  tr
                    td No of Invoices
                    td {{ controlTotals.transactionCount }}
                  tr
                    td No of Errors
                    td {{ controlTotals.feedErrorsCount }}
                  tr
                    td Transactions Created
                    td {{ createdTransactionCount }}
              //|<table class="table table-striped" ng-show="!dataUpdateRunning">
              |<table class="table table-striped">
              |<thead><tr><th ng-repeat="column in displayHeaderValues" >{{column.displayName}}</th></tr></thead>
              |<tbody>
              |<tr ng-repeat-start="transaction in feedErrors" class="success" ng-class="{danger:transaction.isCorrect}"> 
              |  <td ng-repeat="column in displayHeaderValues">{{transaction[column.name]}} </td>
              |  <td ng-if="hasLines"><button type="button" ng-click="openTransactionLines(transaction)" class="btn btn-xs indent">View Imported Lines</button></td>
              |</tr>
              //|<tr ng-if="hasLines && transaction.isCorrect.status"><td colspan="100%">
 
              //|<tr ng-repeat-end><tr ng-repeat-end ng-hide="true">
              |<tr ng-repeat-end><tr ng-repeat-end> 
              |</tbody></table>
    
              |<table class="table table-striped">
              |<thead><tr><th ng-repeat="column in displayHeaderValues" >{{column.displayName}}</th></tr></thead>
              |<tbody>
              |<tr ng-repeat-start="transaction in feedTransactions" class="success" ng-class="{danger:transaction.isCorrect}"> 
              |  <td ng-repeat="column in displayHeaderValues">{{transaction[column.name]}} </td>
              |  <td ng-if="hasLines"><button type="button" ng-click="openTransactionLines(transaction)" class="btn btn-xs indent">View Imported Lines</button></td>
              |</tr>
              //|<tr ng-if="hasLines && transaction.isCorrect.status"><td colspan="100%">
 
              //|<tr ng-repeat-end><tr ng-repeat-end ng-hide="true">
              |<tr ng-repeat-end><tr ng-repeat-end> 
              |</tbody></table>

              // New table to display results
              |<table class="table table-striped" ng-show="dataUpdateRunning">
              |<tbody>
              |<tr ng-repeat="transaction in createdTransactions" ng-class="{danger:!transaction.status}" class="success"> 
              |  <td>{{transaction.transactionRef}}</td>
              |  <td>{{transaction.status}}</td>
              |  <td>{{transaction.errorCode}}</td>
              |  <td>{{transaction.message}}</td>
              |  <td>{{transaction.transactionID}}</td>
              |</tr>
              |</tbody></table>
           .col-md-6
              table.table.table-striped
                thead
                  tr
                    th Customer A/C defaults
                    th Default Value
                tbody
                  tr
                    td Name
                    td {{customerDefaults.Name}}
                  tr
                    td Bank Account Code
                    td {{customerDefaults.BankAccountCode}}
                  tr
                    td Control (GL) Account Code
                    td {{customerDefaults.ControlGLAccountCode}}
                  tr
                    td Credit Terms (ID)
                    td {{customerDefaults.CreditTermID}}
                  tr
                    td Currency Code
                    td {{customerDefaults.CurrencyCode}}
                  tr
                    td GL Account Code
                    td {{customerDefaults.DefaultGLAccountCode}}
                  tr
                    td Tax Code
                    td {{customerDefaults.DefaultTaxCode}}
           .col-md-6
             button(type='button', class='btn btn-primary', ng-click='GetCustomerDefaults()') Get Customer Defaults
             button(type='button', class='btn btn-primary', ng-disabled="abortedRun" ng-click='createTransactions(feedTransactions)') Start Processing
             button(type='button', class='btn btn-danger' ng-click='stop()') Abort Processing
           .col-md-6
             |<uib-progressbar max="max" value="( createdTransactionCount + controlTotals.feedErrorsCount / controlTotals.transactionCount )"><span style="color:white; white-space:nowrap;">{{ createdTransactionCount }} + {{ controlTotals.feedErrorsCount }} / {{ controlTotals.transactionCount }}</span></uib-progressbar>
        uib-tab(heading="Manage Data")
            |<script type="text/ng-template" id="mapDataPopup.html">
            |    <form name="MapDataPopUp">
            |    <div class="modal-header">
            |        <h3>Map Data {{ mapData.data.name }} for database {{ mapData.data.coID }} </h3>
            |    </div>
            |    <div class="modal-body">
            |      <ng-form name="mapDataForm">
            |        <div class="form-group" ng-repeat="value in mapData.mapData.data">
            |          <label class="col-md-3" for="value.sourceValue">Source</label>
            |          <input class="col-md-3" type=text class="form-control" placeholder="{{ value.sourceValue }}" id="value.sourceValue" ng-model="value.sourceValue">
            |          <label class="col-md-3" for="value.aiqValue">AccountsIQ</label>
            |          <input class="col-md-3" type=text class="form-control" placeholder="{{ value.aiqValue }}" id="value.aiqValue" ng-model="value.aiqValue">
            |        </div>
            |      </ng-form>
            |    </div>
            |    <div class="modal-footer">
            |        <button class="btn btn-primary" ng-click="ok()">OK</button>
            |        <button class="btn btn-warning" ng-click="cancel()">Cancel</button>
            |    </div>
            |    </form>
            |</script>
            p(class='small') Manage data mapping between the source system and AccountsIQ company {{ coID }}. {{ valuesToValidate.length }}
            ul(class='list-group')
              li(class='list-group-item', ng-repeat='value in objectsToValidate' ng-if="value.validate.map==true")
                Maintain Mapping for {{value.name}}
                button(type='button', class='btn btn-xs indent', ng-click='openManageMapping(value)') Manage
