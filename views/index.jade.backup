extends layout

block content
    // Include Pop Up Forms (load as scripts)
    include transactionLinesPopUp
    include accountIDPopUp
    include mapDataPopUp
    include loadDataWaitPopUp
    include processDataWaitPopUp
    div(class='row')
      table(table style="width:100%")
        tbody
          tr(style="border-top:2px light grey")
            td Connection
            td Operation
            td Load Data
            td Review
            td Update Data
            td Complete
      ul(class="nav nav-pills nav-justified")
        li Connection
        li Operation
        li Load Data
        li Review
        li Update Data
        li Complete

    // Include first form to select the environment/integration type
    include selectEnvironment
    div(class='row', ng-controller='updateController' ng-show="loadDataReady")
      h2 Processing {{ type }}  for {{ coID }} 
      uib-tabset(justified="true", active="activePill", type="pills")
        uib-tab(heading="Load Data")
          p Now you can load your data. In this stage the data will be loaded, validated and transformed into a format suitable for loading into accountsIQ. You will then need to review the data (some transactions may be found to be invalid). You will also be presented with a list of missing "reference data" that you may need to create in accountsIQ (such as Item Codes, Supplier and Customer Codes, Nominal Codes etc.. You will be able to create supplier or customer codes from here - but any other codes will need to be created in accountsIQ (and you will then need to revalidate the data).
           // form  to handle dynamic filters
          form(name="loadFileForm")
            li(class='list-group-item', ng-repeat='filter in loadDataFilters')
              ul 
               label(for="{{ filter.name }}: " ,class='control-label') {{ filter.label }}  
               |<input type="{{ filter.type }}" name="{{ filter.name }}"  ng-model="filter[filter.name]" ng-required="{{ filter.required }}">
            include statusTable
            
            button(type='button', class='btn btn-primary', ng-click='loadFileForm.$valid && loadData(loadFileForm) ; showLoadDataWait(feedTransactions.length)', ng-hide='feedTransactions.length>0') Load File
          .well.clearfix
           .col-md-12
                  p(class='small' ng-show="hasHeader") Customers to be created in AccountsIQ company {{ coID }}. You can use the "Create Account" button to create them but it is highly recommended that you update the customer names and addresses before processing the invoices. The names and addresses, GL Code and Tax Codes (defaulted in - use the "Get Customer Defaults" to see what they are. But the settings will propogate to every created invoice (so get them correct before creating the invoices).

                  include invalidDataTable 
                  
           .col-md-12
              // Bring in the control table (used for record counts) 
              include controlTable
              // Two tables to store invalid and all feed transactions 
              include feedTransactionTables
              // progress bar for data update - replaced with Pop Up
              // include processProgressBar
              // New table to display results
              include resultsTable              
           .col-md-6
             //include accountDefaultsTable
             //button(type='button', class='btn btn-primary', ng-disabled="abortedRun" ng-click='createTransactions(feedTransactions); showProcessDataWait(feedTransactions.length)', ng-show="feedTransactions.length>0" ) Start Processing
             button(type='button', class='btn btn-primary', ng-click='createTransactions(feedTransactions); showProcessDataWait(feedTransactions.length)', ng-show="feedTransactions.length>0" ) Start Processing
             //button(type='button', class='btn btn-danger' ng-click='stop()', ng-show="feedTransactions.length>0") Abort Processing
        uib-tab(heading="Manage Data")
            p(class='small') Manage data mapping between the source system and AccountsIQ company {{ coID }}. {{ valuesToValidate.length }}
            ul(class='list-group')
              li(class='list-group-item', ng-repeat='value in objectsToValidate' ng-if="value.validate.map==true")
                Maintain Mapping for {{value.name}}
                button(type='button', class='btn btn-xs indent', ng-click='openManageMapping(value)') Manage
